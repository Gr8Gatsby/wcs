{"version":3,"file":"trimEmojiData.cjs","sources":["src/database/utils/requiredKeys.js","src/database/utils/assertEmojiBaseData.js","src/trimEmojiData.js"],"sourcesContent":["export const requiredKeys = [\n  'annotation',\n  'emoji',\n  'emoticon',\n  'group',\n  'order',\n  'shortcodes',\n  'tags',\n  'version'\n]\n","import { requiredKeys } from './requiredKeys'\n\nexport function assertEmojiBaseData (emojiBaseData) {\n  if (!emojiBaseData ||\n    !Array.isArray(emojiBaseData) ||\n    !emojiBaseData[0] ||\n    (typeof emojiBaseData[0] !== 'object') ||\n    requiredKeys.some(key => (!(key in emojiBaseData[0])))) {\n    throw new Error('Expected emojibase full (not compact) data, but data is in wrong format')\n  }\n}\n","import { assertEmojiBaseData } from './database/utils/assertEmojiBaseData'\nimport { requiredKeys } from './database/utils/requiredKeys'\n\nconst optionalKeys = ['skins', 'emoticon']\nconst allKeys = [...requiredKeys, ...optionalKeys]\n\nconst allSkinsKeys = ['tone', 'emoji', 'version']\n\nexport default function trimEmojiData (emojiBaseData) {\n  assertEmojiBaseData(emojiBaseData)\n  return emojiBaseData.map(emoji => {\n    const res = {}\n    for (const key of allKeys) {\n      if (key in emoji) {\n        if (key === 'skins') { // trim skins even further\n          res[key] = emoji[key].map(skin => {\n            const skinRes = {}\n            for (const skinKey of allSkinsKeys) {\n              skinRes[skinKey] = skin[skinKey]\n            }\n            return skinRes\n          })\n        } else {\n          res[key] = emoji[key]\n        }\n      }\n    }\n    return res\n  })\n};\n"],"names":[],"mappings":";;AAAO,MAAM,YAAY,GAAG;AAC5B,EAAE,YAAY;AACd,EAAE,OAAO;AACT,EAAE,UAAU;AACZ,EAAE,OAAO;AACT,EAAE,OAAO;AACT,EAAE,YAAY;AACd,EAAE,MAAM;AACR,EAAE,SAAS;AACX;;ACPO,SAAS,mBAAmB,EAAE,aAAa,EAAE;AACpD,EAAE,IAAI,CAAC,aAAa;AACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC;AACjC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;AACrB,KAAK,OAAO,aAAa,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC;AAC1C,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC5D,IAAI,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC;AAC9F,GAAG;AACH;;ACPA,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,UAAU,EAAC;AAC1C,MAAM,OAAO,GAAG,CAAC,GAAG,YAAY,EAAE,GAAG,YAAY,EAAC;AAClD;AACA,MAAM,YAAY,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAC;AACjD;AACe,SAAS,aAAa,EAAE,aAAa,EAAE;AACtD,EAAE,mBAAmB,CAAC,aAAa,EAAC;AACpC,EAAE,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI;AACpC,IAAI,MAAM,GAAG,GAAG,GAAE;AAClB,IAAI,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;AAC/B,MAAM,IAAI,GAAG,IAAI,KAAK,EAAE;AACxB,QAAQ,IAAI,GAAG,KAAK,OAAO,EAAE;AAC7B,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI;AAC5C,YAAY,MAAM,OAAO,GAAG,GAAE;AAC9B,YAAY,KAAK,MAAM,OAAO,IAAI,YAAY,EAAE;AAChD,cAAc,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,EAAC;AAC9C,aAAa;AACb,YAAY,OAAO,OAAO;AAC1B,WAAW,EAAC;AACZ,SAAS,MAAM;AACf,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,EAAC;AAC/B,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,OAAO,GAAG;AACd,GAAG,CAAC;AACJ;;;;"}